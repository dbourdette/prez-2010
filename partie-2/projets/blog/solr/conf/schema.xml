<?xml version="1.0" encoding="UTF-8" ?>
<schema name="web-content" version="1.3">
 	<types>
	    <!-- field type definitions. The "name" attribute is
	       just a label to be used by field definitions.  The "class"
	       attribute and any other attributes determine the real
	       behavior of the fieldType.
	         Class names starting with "solr" refer to java classes in the
	       org.apache.solr.analysis package.
	    -->
	
	    <!-- The StrField type is not analyzed, but indexed/stored verbatim.  
	       - StrField and TextField support an optional compressThreshold which
	       limits compression (if enabled in the derived fields) to values which
	       exceed a certain size (in characters).
	    -->
	    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
	
	    <!-- boolean type: "true" or "false" -->
	    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>
	    <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
	    <fieldtype name="binary" class="solr.BinaryField"/>
	
	    <!-- The optional sortMissingLast and sortMissingFirst attributes are
	         currently supported on types that are sorted internally as strings.
	           This includes "string","boolean","sint","slong","sfloat","sdouble","pdate"
	       - If sortMissingLast="true", then a sort on this field will cause documents
	         without the field to come after documents with the field,
	         regardless of the requested sort order (asc or desc).
	       - If sortMissingFirst="true", then a sort on this field will cause documents
	         without the field to come before documents with the field,
	         regardless of the requested sort order.
	       - If sortMissingLast="false" and sortMissingFirst="false" (the default),
	         then default lucene sorting will be used which places docs without the
	         field first in an ascending sort and last in a descending sort.
	    -->    
	
	    <!--
	      Default numeric field types. For faster range queries, consider the tint/tfloat/tlong/tdouble types.
	    -->
	    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
	    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
	    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
	    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
	
	    <!--
	     Numeric field types that index each value at various levels of precision
	     to accelerate range queries when the number of values between the range
	     endpoints is large. See the javadoc for NumericRangeQuery for internal
	     implementation details.
	
	     Smaller precisionStep values (specified in bits) will lead to more tokens
	     indexed per value, slightly larger index size, and faster range queries.
	     A precisionStep of 0 disables indexing at different precision levels.
	    -->
	    <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
	    <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
	    <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
	    <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
	
	    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
	         is a more restricted form of the canonical representation of dateTime
	         http://www.w3.org/TR/xmlschema-2/#dateTime    
	         The trailing "Z" designates UTC time and is mandatory.
	         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
	         All other components are mandatory.
	
	         Expressions can also be used to denote calculations that should be
	         performed relative to "NOW" to determine the value, ie...
	
	               NOW/HOUR
	                  ... Round to the start of the current hour
	               NOW-1DAY
	                  ... Exactly 1 day prior to now
	               NOW/DAY+6MONTHS+3DAYS
	                  ... 6 months and 3 days in the future from the start of
	                      the current day
	                      
	         Consult the DateField javadocs for more information.
	
	         Note: For faster range queries, consider the tdate type
	      -->
	    <fieldType name="date" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/>
	
	    <!-- A Trie based date field for faster date range queries and date faceting. -->
	    <fieldType name="tdate" class="solr.TrieDateField" omitNorms="true" precisionStep="6" positionIncrementGap="0"/>
	    
		<fieldType name="text" class="solr.TextField" positionIncrementGap="100">
	      <analyzer type="index">
	        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
	        <filter class="solr.ASCIIFoldingFilterFactory" />
	        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false"/>
	        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
	        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true"/>
	        <filter class="solr.LowerCaseFilterFactory"/>
	        <filter class="solr.SnowballPorterFilterFactory" language="French" protected="protwords.txt"/>
	        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
	      </analyzer>
	      <analyzer type="query">
	        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
	        <filter class="solr.ASCIIFoldingFilterFactory" />
	        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
	        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
	        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true"/>
	        <filter class="solr.LowerCaseFilterFactory"/>
	        <filter class="solr.SnowballPorterFilterFactory" language="French" protected="protwords.txt"/>
	        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
	      </analyzer>
	    </fieldType>
	</types>
 	<fields>
 		<!-- Valid attributes for fields:
	     name: mandatory - the name for the field
	     type: mandatory - the name of a previously defined type from the 
	       <types> section
	     indexed: true if this field should be indexed (searchable or sortable)
	     stored: true if this field should be retrievable
	     compressed: [false] if this field should be stored using gzip compression
	       (this will only apply if the field type is compressable; among
	       the standard field types, only TextField and StrField are)
	     multiValued: true if this field may contain multiple values per document
	     omitNorms: (expert) set to true to omit the norms associated with
	       this field (this disables length normalization and index-time
	       boosting for the field, and saves some memory).  Only full-text
	       fields or fields that need an index-time boost need norms.
	     termVectors: [false] set to true to store the term vector for a
	       given field.
	       When using MoreLikeThis, fields used for similarity should be
	       stored for best performance.
	     termPositions: Store position information with the term vector.  
	       This will increase storage costs.
	     termOffsets: Store offset information with the term vector. This 
	       will increase storage costs.
	     default: a value that should be used if no value is specified
	       when adding a document.
	   -->
 		<field name="id" type="string" indexed="true" stored="true" required="true" />
		<field name="date" type="tdate" indexed="true" stored="true" required="true" />
		<field name="slug" type="string" indexed="true" stored="true" required="true" />
		<field name="author" type="string" indexed="true" stored="true"/>
		<field name="title" type="text" indexed="true" stored="true" required="true" />
		<field name="text" type="text" indexed="true" stored="true"/>
		<field name="tags" type="string" indexed="true" stored="true" multiValued="true" />
		<field name="commentCount" type="tint" indexed="true" stored="true"/>
		
		<field name="text_search" type="text" indexed="true" stored="false" multiValued="true"/>
	</fields>
	<uniqueKey>id</uniqueKey>
	<defaultSearchField>text_search</defaultSearchField>
	<solrQueryParser defaultOperator="AND"/>
	
	<copyField source="title" dest="text_search"/>
	<copyField source="text" dest="text_search"/>
	<copyField source="tags" dest="text_search"/>
</schema>